
AA Conservation version 1.0b (2 September 2010)

This program allows calculation of conservation of amino acids in
multiple sequence alignments.
It implements 17 different conservation scores as described by Valdar in
his paper (Scoring Residue Conservation, PROTEINS: Structure, Function
and  Bioinformatics 48:227-241 (2002)) and SMERFS scoring algorithm as described
by Manning, Jefferson and Barton (The contrasting properties of conservation
and correlated phylogeny in protein functional residue prediction,
BMC Bioinformatics (2008)).

The conservation algorithms supported are:

KABAT, JORES, SCHNEIDER, SHENKIN, GERSTEIN, TAYLOR_GAPS, TAYLOR_NO_GAPS, 
ZVELIBIL, KARLIN, ARMON, THOMPSON, NOT_LANCET, MIRNY, WILLIAMSON, 
LANDGRAF, SANDER, VALDAR, SMERFS

Input format is either a FASTA formatted file containing aligned sequences with 
gaps or a Clustal alignment. The valid gap characters are *, -, space character,
X and . (a dot). By default program prints the results to the command window. 
If the output file is provided the results are printed to the file in two 
possible formats with or without an alignment.
If format is not specified, the program outputs conservation scores without 
alignment. The scores are not normalized by default but they can be (see below).
SMERFS default parameters are window width of 7, column score is set to
the middle column (MID_SCORE), gap% cutoff of 0.1. Different parameters for SMERFS 
can be provided (see below). Details of the program execution can be recorded to
a separate file if an appropriate file path is provided.

List of command line arguments:

-m=  precedes a comma separated list of method names
     EXAMPLE: -m=KABAT,JORES,GERSTEIN
     Optional, if no method is specified request for all is assumed. 

-i=  precedes a full path to the input FASTA file, required

-o=  precedes a full path to the output file, optional, if no output file is 
     provided the program will output to the standard out.  

-t=  precedes the number of CPUs (CPU cores more precisely) to use. Optional, 
	 defaults to all processors available on the machine.  
      
-f=  precedes the format  of the results in the output file
     two different formats are possible:
      RESULT_WITH_ALIGNMENT
      RESULT_NO_ALIGNMENT
     Optional, if not specified RESULT_NO_ALIGNMENT is assumed 

-d=  precedes a full path to a file where program execution details are to be 
     listed. Optional, if not provided, no execution statistics is produced.  
      
-g=  precedes comma separated list of gap characters provided by the user, if 
     you're using an unusual gap character (not a -,., ,*,X) you have to 
     provide it. If you you provide this list you have to list all the gaps 
     accepted. Including those that were previously treated as a default. 
     Optional.      
      
-n   using this key causes the results to be normalized. 
	 Normalized results have values between 0 and 1. Please note however, that 
	 some results cannot be normalized. In such a case, the system returns not 
	 normalized value, and log the issue to the standard error stream. 
	 The following formula is used for normalization 
			n = (d - dmin)/(dmax - dmin)
	 Negative results first converted to positive by adding an absolute value of
	 the most negative result. Optional.

SMERFS Only Parameters: 

-smerfsGT=  precedes SMERFS Gap Treshold - a gap percentage cutoff - 
			a float greater than 0 and smaller or equal 1. Optional defaults 
			to 0.1

-smerfsCS=  precedes SMERFS Column Score algorithm defines the window scores to 
			columns	allocation , two methods are possible:
	        MID_SCORE - gives the window score to the middle column
	        MAX_SCORE - gives the column the highest score of all the windows it 
	        belongs to. Optional defaults to MID_SCORE.  

-smerfsWW=  precedes Window Width parameter - an integer and an odd number.
            Optional, defaults to 7 
	  

EXAMPLE HOW TO RUN THE PROGRAM:
java -jar <jar name> -m=KABAT,SMERFS -i=prot1 -o=prot1_results -n

As a result of the execution KABAT and SMERFS scores will be calculated. 
Input comes form prot1 file and an output without an alignment is recorded to 
prot1_results file. 

Authors: Peter Troshin, Agnieszka Golicz, David Martin and Geoff Barton.
Please visit http://www.compbio.dundee.ac.uk/aacon for further information.
 