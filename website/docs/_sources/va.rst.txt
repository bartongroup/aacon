Virtual Appliance (VA)
======================

The JABAWS Virtual Appliance is a way to run a JABAWS server locally, without the need to connect to the internet or configure JABAWS. What the appliance provides is a 'virtual server machine' (or more simply - *virtual machine* or *VM*), running an installation of the JABAWS Web Application Archive (WAR) on `TurnKey Linux`_ 12.1 (Standlone Tomcat). Once this has started up, it displays a message indicating the IP address of the JABAWS server, allowing any JABAWS client (such as Jalview or the JABAWS command line client) to connect to it.

You can run the appliance with freely available program such as `VMware Player`_, but you will need to install it first. We have tested the JABAWS appliance with VMware Player v 3.1.2 on Windows and Linux, and VMware Fusion on Mac. However, you are not limited to these virtualization systems and can use the JABAWS Appliance with any other virtualization platform. You can use `VMware OVF`_ tool to prepare JABAWS image for a different virtualization platform e.g. `VirtualBox`_.

.. note:: The appliance best suits users who would like to use the JABAWS web-services locally. This might be because they do not want to access systems over an internet, or just want to keep their data private. It is also the recommended option for users who want to install JABAWS on Windows, which does not support all the bioinformatics programs that JABAWS can run.

For servers that will be used heavily, we recommend that a JABAWS Server WAR distribution is deployed, rather than the Virtual Appliance version of JABAWS. This is because the JABAWS appliance is pre-configured to use only 1 CPU and 512M of memory (where the minimum amount of memory required for a JABAWS server is about 378M), which is unlikely to be sufficient for heavy computation. It is possible to reconfigure the virtual appliance so it uses more computation resources, but for most production environments, the JABAWS WAR distribution will be easier to deploy and fine tune to take advantage of the available resources.


------------

.. _va_installing:

Installing
----------

.. tip:: Check if you are running the recommended version of VWMare.

The free `VMware Player`_ can be used to run the JABAWS services from the Windows and Linux host operating systems. `VMware Fusion`_, a commercial VMware product, offers virtual machine support for Mac.

To run the JABAWS server on VMware player, unpack the JABAWS VM into one of the folders on your local hard drive. Open VMware Player, click "Open Virtual Machine" and point the Player to the location of the JABAWS, then choose the ``JABAWS*.vmx`` file to open an appliance.

When you play the machine for the first time the Player might ask you whether "This virtual machine may have been moved or copied.", say that you have copied it. That is all.


------------

.. _va_usage:

Usage
-----

By default, the JABAWS virtual appliance is configured with 512M of memory and 1 CPU, but you are free to change these settings. If you have more than one CPU or CPU core on your computer you can make them available for the JABAWS virtual machine by editing virtual machine settings. Please bear in mind that more CPU power will not make a single calculation go faster, but it will enable the VM to do calculations in parallel. Similarly, you can add more memory to the virtual machine. More memory lets your VM deal with larger tasks, e.g. work with large alignments.


.. image:: ../website/static/img/VMware_cpu.png
   :height: 267
   :width: 708
   :scale: 95 %
   :align: left

The VMware Player screen shot above displays JABAWS VM CPU settings.


------------

.. _va_config:


Configuration
-------------

.. _va_vm_config:

VM configuration
~~~~~~~~~~~~~~~~

**VMware info**

* CPUs : 1
* RAM : 512 MB
* Networking : Host only (the VM has no access to the outside network, nothing from the outside network can access the VM)
* Hard disk : 20 GB (expanding)
* VMware tools : Installed

**OS information**

* OS : TurnKey Linux (v. 14.1, Standalone Tomcat) based on Debian GNU/Linux 8 (Jessie)
* Installation : Oracle Java 7, Tomcat 7, JABAWS v. 2.2
* IPv4 address : dhcp
* IPv6 address : auto
* DNS name : none
* Name server : dhcp
* Route : dhcp
* Keyboard : US_intl

**Login credentials**

* Root password: JabawsAdmin1
* MySQL password: JabawsAdmin1
* Tomcat admin password: JabawsAdmin2

**Services available at the virtial machine IP (e.g. VM_IP = 172.16.232.149)**

* Tomcat Web Server: http://VM_IP (e.g. http://172.16.232.149)
* Jabaws URL: http://VM_IP/jabaws (e.g. http://172.16.232.149/jabaws)
* Web Shell: https://VM_IP:12320/ (e.g. https://172.16.232.149:12320)
* Webmean: https://VM_IP:12321/ (e.g. https://172.16.232.149:12321)
* SSH/SFTP: root@VM_IP (e.g. ssh root@172.16.232.149)


------------

.. _va_jabaws_config:

JABAWS configuration
~~~~~~~~~~~~~~~~~~~~

After booting the JABAWS VM, you should see similar screen, however, the IP address of your VM may be different. To enable Jalview to work with your JABAWS appliance you need to go to Jalview->Tools->Preferences->Web Services -> New Service URL, and add JABAWS URL into the box provided. For more information please refer to `Jalview help pages`_.

.. _Jalview help pages: http://www.jalview.org/help/html/webServices/JABAWS.html

.. image:: ../website/static/img/vm_welcome_screen.png
   :height: 461
   :width: 734
   :scale: 95 %
   :align: left

If you click on Advanced Menu, you will see the configuration console, similar to the one below.

.. image:: ../website/static/img/VMware_booted.png
  :height: 461
  :width: 735
  :scale: 95 %
  :align: left

By default the JABAWS VM is configured to use host-only networking. This means that the host can communicate with the VM via a network, but no other machines can. Similarly, the VM cannot communicate with any other computers apart from the host. If you want to connect to the Internet from the VM, configure your VM to use NAT network. However, you will not be able to connect to the VM from the host in such case. If you want to be able to connect to your VM and let VM connect to the internet at the same time you would have to use a Bridged network. In such a case you would have to configure the VM IP address manually (unless of course your network has a DHCP server to do that).


.. links
.. _Jalview: http://www.jalview.org/
.. _TurnKey Linux: https://www.turnkeylinux.org/tomcat
.. _JABAWS Virtual Appliance: ../download.jsp#va
.. _VMWare Player: http://www.vmware.com/products/player
.. _VMWare Fusion: http://www.vmware.com/products/fusion/overview.html
.. _VirtualBox: https://www.virtualbox.org/
.. _VMware OVF: https://code.vmware.com/web/dp/tool/ovf/4.1.0
